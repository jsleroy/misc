#!/usr/bin/env python
#-------------------------------------------------------------------------------
# extract ledjam radio "now playing" information
#
# references:
#
#   http://www.smackfu.com/stuff/programming/shoutcast.html
#   http://anton.logvinenko.name/en/blog/how-to-get-title-from-audio-stream-with-python.html
#-------------------------------------------------------------------------------

import urllib
import urllib2
import json
import re
import time
import argparse

parser = argparse.ArgumentParser(description=
  'fill Deezer playlist with songs from LeDjam Radio')

parser.add_argument('token', metavar='T', type=str, help='Deezer OAuth token')
args = parser.parse_args()

prev_title = ""
pattern = re.compile(r'''StreamTitle='(\[.*\] )?(?P<title>[\w\W\-]*?)';''')

while True:
  request = urllib2.Request('http://www.ledjamradio.com/sound')
  request.add_header('Icy-MetaData', 1)
  response = urllib2.urlopen(request)
  header = response.headers.get('icy-metaint')

  if header is not None:
    metadata = int(header)
    content = response.read(metadata + 255)
    title = re.search(pattern, content[metadata:]).group('title')

    try:
        artist, track = title.split(" - ", 1)
    except:
      continue

    artist = artist.strip()
    track = track.strip()

    if title == prev_title:
      continue

    prev_title = title

    print "title: '{0}' ({1} --- {2})".format(title, artist, track),

    url = 'http://api.deezer.com/search?q='
    url += urllib.quote('artist:"%s" track:"%s"' % (artist, track))
    response = urllib2.urlopen(url)
    s = response.read().decode('utf-8')
    response.close()
    result = json.loads(s)

    total = int(result["total"])

    print total, 'found(s)'

    if total == 0:
      continue

    song = result["data"][0]["id"]
    print 'song id:', song

    url = 'https://api.deezer.com/playlist/134107571/tracks?access_token=%s' \
        % args.token
    data = urllib.urlencode({'songs' : song})
    req = urllib2.Request(url, data)
    response = urllib2.urlopen(req)

    print response.read()

  time.sleep(20)
